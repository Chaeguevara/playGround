# smart pane switching with awareness of vim splits.
# see: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqe '^[^txz ]+ +(\\s+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'c-h' if-shell "$is_vim" 'send-keys c-h' 'select-pane -l'
bind-key -n 'c-j' if-shell "$is_vim" 'send-keys c-j' 'select-pane -d'
bind-key -n 'c-k' if-shell "$is_vim" 'send-keys c-k' 'select-pane -u'
bind-key -n 'c-l' if-shell "$is_vim" 'send-keys c-l' 'select-pane -r'

tmux_version='$(tmux -v | sed -en "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'c-\\' if-shell \"$is_vim\" 'send-keys c-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'c-\\' if-shell \"$is_vim\" 'send-keys c-\\\\'  'select-pane -l'"

bind-key -n 'c-space' if-shell "$is_vim" 'send-keys c-space' 'select-pane -t:.+'

bind-key -t copy-mode-vi 'c-h' select-pane -l
bind-key -t copy-mode-vi 'c-j' select-pane -d
bind-key -t copy-mode-vi 'c-k' select-pane -u
bind-key -t copy-mode-vi 'c-l' select-pane -r
bind-key -t copy-mode-vi 'c-\' select-pane -l
bind-key -t copy-mode-vi 'c-space' select-pane -t:.+

setw -g mode-keys vi
bind -t copy-mode-vi v send -x begin-selection
bind -t copy-mode-vi y send-keys -x copy-pipe-and-cancel "pbcopy"
bind p paste-buffer
bind -t copy-mode-vi mousedragend1pane send-keys -x copy-pipe-and-cancel "pbcopy"

# conda

set-option -ga update-environment 'conda_default_env'
